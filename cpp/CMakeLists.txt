CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
PROJECT(libsift)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)
SET(CMAKE_CXX_STANDARD 11)

# C++ Flags.
IF (MSVC)
    ADD_COMPILE_OPTIONS("/Wall" "/WX")
ELSE()
    ADD_COMPILE_OPTIONS("-Wall" "-Werror")
ENDIF()

FIND_PACKAGE(OpenImageIO REQUIRED)
ADD_SUBDIRECTORY(lib)

OPTION(BUILD_BINARIES "Whether to build the SIFT binaries." ON)
OPTION(BUILD_TESTS "Whether to build the SIFT tests." ON)

IF(BUILD_BINARIES OR BUILD_TESTS)
    FIND_PACKAGE(Boost 1.54.0 REQUIRED
                 COMPONENTS filesystem program_options system)
ENDIF()

FUNCTION(LIBSIFTCPP_ADD_DEPS TARGET)
    TARGET_INCLUDE_DIRECTORIES(${TARGET} SYSTEM PRIVATE $<TARGET_PROPERTY:siftcpp,INTERFACE_INCLUDE_DIRECTORIES>)
    TARGET_LINK_LIBRARIES(${TARGET} siftcpp)
    
    IF(Boost_FOUND)
        TARGET_INCLUDE_DIRECTORIES(${TARGET} PRIVATE ${Boost_INCLUDE_DIRS})
        TARGET_LINK_LIBRARIES(${TARGET} ${Boost_LIBRARIES})
    ENDIF()
ENDFUNCTION()

IF(BUILD_BINARIES)
    ADD_SUBDIRECTORY(src)
ENDIF()

IF(BUILD_TESTS)
    ENABLE_TESTING()
    ADD_SUBDIRECTORY(test)
ENDIF()

# Compile commands for YCM
ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json
                   DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json
                   COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json)
ADD_CUSTOM_TARGET(compile_commands ALL
                  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json)

# Doxygen
OPTION(BUILD_DOCS "Whether to build Doxygen CPP docs." ON)
IF(BUILD_DOCS)
    FIND_PACKAGE(Doxygen REQUIRED)
    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxyfile.in
                   ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
    ADD_CUSTOM_TARGET(doxygen_docs ALL
                      COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
                      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
                      COMMENT "Generating Doxygen docs...")
ENDIF()
